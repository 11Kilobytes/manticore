(* future1.hlop
 *
 * COPYRIGHT (c) 2007 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * To create a one-shot future.
 *)

#include "types.def"
#include "futures.def"

(* void M_WorkEnqueue(VProc_t *vp, Value_t q, Value_t item) *)
extern void M_WorkEnqueue(void*,void*,void*) __attribute__((alloc));

define @future1 (qt : [work_queue, thunk] / exh : exh) : future =
  (* a future1 cell consists of two words:
       1) a _state_ word, with one of the following values:
            EMPTY_F
            STOLEN_F
            EVAL_F
            FULL      value
            WAITING   cont
       2) a _thunk_ word 
   *)
  let q : work_queue = #0(qt)
  let thunk : thunk  = #1(qt)
  let e : any = (any)EMPTY_F
  let cell : future = alloc(e, thunk)
  let cell : future = promote(cell)
  let vp : vproc = host_vproc
  do ccall M_WorkEnqueue (vp, q, cell)
  return (cell)
;
