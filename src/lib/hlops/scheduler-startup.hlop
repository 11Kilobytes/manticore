(* scheduler-startup.hlop
 *
 * COPYRIGHT (c) 2007 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *
 * Install an initial scheduler action on the vprocs in a system.
 *)

#include "types.def"

extern void *ListVProcs (void *) __attribute__((alloc));

define inline @spawn-on (f : fun (unit / handler -> unit), dst : vproc) : tid;
define inline @run (vp : vproc, act : sigact, fiber : fiber) noreturn;
define inline @thread-exit () noreturn;

define @scheduler-startup (act : sigact / exh : handler) : unit =
  fun init (_ : unit / exh : handler) : any =
    cont k (_ : unit) = @thread-exit ()
    @run (host_vproc, act, enum(0), k)
  let self : vproc = host_vproc
  let vps : list = ccall ListVProcs(self)
  fun spawnOnAll (vps : list / exh : handler) : unit =
    case vps
      of NIL => return (UNIT)
       | CONS (vp:vproc, rest:list) =>
        if Equal (vp, self)
	  then apply spawnOnAll (rest / exh)
          else let _ : tid = @spawn-on (init, vp)
               apply spawnOnAll (rest / exh)
    end
  cont startup (_ : unit) =
    (* install the scheduler on remote vprocs *)
    let _ : unit = apply spawnOnAll (vps / exh)
    return (UNIT)
  @run (self, act, enum(0), startup)
;
