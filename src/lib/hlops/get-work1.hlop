(* get-work1.hlop
 *
 * COPYRIGHT (c) 2007 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *)

#include "types.def"
#include "futures.def"

(*   Value_t M_WorkDequeue(VProc_t *vp, Value_t q) *)
extern void* M_WorkDequeue(void*,void*) __attribute__((alloc));

define @steal1 (fp : future / exh : exh) : ();

define @get-work1 (q : work_queue / exh : exh) : () =
  fun loop ( / exh : exh) : () =
    let vp : vproc = host_vproc
    let w : option = ccall M_WorkDequeue (vp, q)
    case w
      of SOME (fut : future) => @steal1 (fut / exh)
       | NONE => apply loop ( / exh)
    end
  apply loop ( / exh)
;

(*
  while (1) {
    case deq()
      of NONE => ()
       | SOME fut => steal1 fut
  } 
*)

