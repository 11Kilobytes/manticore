(* pml.grm
 *
 * COPYRIGHT (c) 2013 The Manticore Project (http://manticore.cs.uchicago.edu)
 * All rights reserved.
 *)

%name PML;

%header (functor MLParserFun (structure Lex : ANTLR_LEXER
                              structure SourceMap : SOURCE_MAP
                              structure Ast: AST));

%tokens
      : KW__prim	("_prim")
      | KW__primcode	("_primcode")
      | KW__datatype	("_datatype")
      | KW__type	("_type")
      | KW__val		("_val")
      (* Getting errors in pml.lex, these seem not to have been pulled in *)
      | PLPAREN ("(|")
      | PRPAREN ("|)")
      | PLBRACE ("{|")
      | PRBRACE ("|}")
      | PLBRACKET ("[|")
      | PRBRACKET ("|]")
      | PWILD ("?")
      | SYMB of CharVector.vector
      ;

%import "ml.grm";
%import "bom.grm";

%start program;

strdecnode
  : "_primcode" "(" BOMDecls ")"
		  => (Strdec.PrimCode (Vector.fromList BOMDecls))
	| "_datatype" tyvarseq tycon "=" "_prim" "(" LongTyId TyArgs? ")"
      => (Strdec.PrimDataType (tyvarseq, tycon, LongTyId, TyArgs))
	| "_type" tyvars tycon "=" "_prim" "(" BOMType ")"
      => (Strdec.PrimTycon (tyvars, tycon, BOMType))
	| "_val" "op" idOrSymb ":" ty "=" "_prim" "(" BOMValueId ")"
      => (idOrSymb (ty, BOMValueId))
	;                             (* ty? *)

symb
  (* : reservedSymbol => (reservedSymbol, posToReg FULL_SPAN) *)
  : SYMB => (Symbol.fromString SYMB, posToReg FULL_SPAN)
  ;

idOrSymb
  : BomId
    => (fn (ty, BOMValueId) => Strdec.PrimValId (BomId, BOMValueId))
  | symb
    => (fn (ty, BOMValueId) => Strdec.PrimValSymb (
      BOM.SymbolicId.fromSymbol symb,
      BOMValueId))
  ;

BOMValueId
	: (LongTyId => (BOM.BomValueId.LongId LongTyId)
	  | HLOpQId => (BOM.BomValueId.HLOpQId HLOpQId))
        => (AstBOM.BomValueId.makeRegion (SR, posToReg FULL_SPAN))
	;
